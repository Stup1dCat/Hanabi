package cn.hanabi.utils;import cn.hanabi.Hanabi;import net.minecraft.client.Minecraft;import java.awt.*;public class DebugUtil {	public String message;	public float x;	public float y;	public int index;	public float timer;	public boolean removing = false;	public Translate translate = new Translate(0f, 0f);	public Translate Position = new Translate(0f, 0f);	public float positionX;	public FadeState fadeState = FadeState.IN;	public Type type;	public DebugUtil(String Message, int Timer, Type Type) {		message = Message;		timer = Timer;		type = Type;		Position.setX(-Minecraft.getMinecraft().fontRendererObj.getStringWidth(message));	}	public void onRender() {		Position.translate(positionX, 0f, 5f);		int color = -1;		switch (type) {			case NONE: {				color = new Color(250, 249, 249, 255).getRGB();				break;			}			case ERROR: {				color = new Color(255 , 45 , 45).getRGB();				break;			}			case INFO: {				color = new Color(111 , 150 , 255).getRGB();				break;			}			case WARNING: {				color = new Color(255 , 200 , 0).getRGB();				break;			}			case SUCESS: {				color = new Color(0 , 200 , 0).getRGB();				break;			}		}		Minecraft.getMinecraft().fontRendererObj.drawStringWithShadow(message, (int) Position.getX(), (int) y, color);		switch (fadeState) {			case IN: {				positionX = 100;				fadeState = FadeState.STAY;				break;			}			case STAY: {				timer -= RenderUtil.delta;				if (timer <= 0) {					fadeState = FadeState.OUT;				}				break;			}			case OUT: {				positionX = -Minecraft.getMinecraft().fontRendererObj.getStringWidth(message);				if (Position.getX() <= positionX && index == 0) {					removing = true;					fadeState = FadeState.END;				}				break;			}			case END: {				Hanabi.INSTANCE.debugUtils.remove(this);				break;			}		}	}	public enum Type {ERROR, WARNING, SUCESS, INFO, NONE}	public enum FadeState {IN, STAY, OUT, END}}